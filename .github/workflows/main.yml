name: BIOMI-RPI

on:
  push:
    branches:
      #- 'main'
      - '**'
env:
  IMAGE_NAME: ghcr.io/prismprotocolhub/biomi-rpi

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Free up disk space on GitHub runner
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          push: false
          platforms: |
            linux/amd64
            linux/arm64
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          outputs: type=docker,dest=biomi-rpi.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: biomi-rpi
          path: biomi-rpi.tar

      - name: Clean up Docker system
        run: docker system prune --all --force

  test:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      publish: ${{ steps.check.outputs.publish }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Docker image
        uses: actions/cache@v4
        with:
          path: /tmp/image.tar
          key: ${{ hashFiles('Dockerfile') }}

      - name: Load Docker image
        run: docker load -i /tmp/image.tar

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible
          pip3 install docker
        env:
          PIP_BREAK_SYSTEM_PACKAGES: 1

      - name: Run tests
        run: |
          ansible-playbook \
            -i test/hosts.yml \
            test/main.yml

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: config
          path: dist

      - name: Check for Tag
        id: check
        run: |
          git fetch --tags
          if [[ ! -z "$(git tag --contains HEAD)" ]]; then
            echo "publish=true" >> $GITHUB_OUTPUT
          fi

  publish:
    if: needs.test.outputs.publish == 'true'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set tag variable
        run: |
          git fetch --tags
          echo "TAG=$(git tag --contains HEAD)" >> $GITHUB_ENV

      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: biomi-rpi

      - name: Load Docker image
        run: docker load -i biomi-rpi.tar

      - name: Tag Docker image
        run: docker tag ${{ env.IMAGE_NAME }}:latest ${{ env.IMAGE_NAME }}:${{ env.TAG }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to GitHub Container Registry
        run: docker push ${{ env.IMAGE_NAME }}:${{ env.TAG }}
